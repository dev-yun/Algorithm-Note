# 파이썬의 장점을 살려 더 짧고 직관적인 코드 (하지만 비교연산횟수가 증가해 효율은 조금 떨어진다)

import random

array = [random.randint(1,10) for col in range(10)]
print(array)

def quick_sort(array):
  if len(array) <= 1:
    return array

  pivot = array[0]
  tail = array[1:]

  left_side = [x for x in tail if x <= pivot]  # 피봇을 제외한 리스트 tail 중 피봇보다 작은 값을 left_side 객체에 저장 (모든 tail에 대해 비교를 하므로 더 연산횟수가 많음)
  right_side = [x for x in tail if x > pivot]  # 같은 방식으로 피봇보다 큰 값을 right_side 객체에 저장

  return quick_sort(left_side) + [pivot] + quick_sort(right_side) # 재귀함수를 호출하여 len(array) <= 1 일때까지 반복하고 전체 리스트 반환


print(quick_sort(array))
