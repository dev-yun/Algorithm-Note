# 삽입정렬도 선택정렬과 마찬가지로 O(n^2)의 시간복잡도를 가지지만 현재 데이터 리스트가 거의 정렬된 상태일때 최대 O(n)의 시간복잡도를 가진다.
# 즉, 주어진 데이터가 거의 정렬된 상태라면 퀵정렬보다 더 효율적이므로 데이터의 상태를 보고 사용하면 효과적이다.

import random

array = [random.randint(1,10) for col in range(10)]
print(array)

for i in range(1, len(array)):
  for j in range(i, 0, -1):                               # i부터 0까지 1씩 줄여가며 반복한다.
    if array[j] < array[j - 1]:                           # 만약 array[i]보다 array[i-1]이 크다면
      array[j], array[j - 1] = array[j - 1], array[j]     # 두 인덱스를 스왑한다.
    else: break

print(array)
